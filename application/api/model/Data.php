<?php
namespace app\api\model;

use think\Model;

/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2017/9/24
 * Time: 13:48
 */
class Data extends Model
{
    protected $autoWriteTimestamp = true;
    protected $createTime = 'add_time';
    protected $type = [
        'rcdate' => 'datetime:Y-m-d H:i',
        'I_date' => 'datetime:Y-m-d H:i',
        'II_date' => 'datetime:Y-m-d H:i'
    ];

    /*public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        self::event('before_update', function  ($data)  {
            dump($data->toArray());
            $data->DataImg()->save($data->toArray());
        });
    }*/
    public function user()
    {
        return $this->belongsTo('User');
    }

    /**
     * 备份单条DATA数据
     * @param $type
     * @return bool
     */
    public function bak($type)
    {
        $id = $this->getData('id');
        if ($id) {
            $m = new DataImg();
            $data = $this->toArray();
            $data['data_id'] = $id;
            $data['edit_type'] = $type;
            unset($data['id']);
            if ($m->save($data)) {
                return true;
            } else {
                return false;
            }
        } else {
            $this->error = '未返回模型实例';
            return false;
        }
    }

    /**
     * 方法返回用户分组规则SQL格式查询条件
     * @param $group_id
     * @return array|bool
     */
    private function groupWhere($group_id)
    {
        $uid = session('uid');
        switch ($group_id) {
            case 1: //管理员
                $where = true;
                break;
            case 2: //业务员
                $where = ['user_id' => $uid];
                break;
            case 3: //内勤
                $where = ['nuser_id' => $uid];
                break;
            case 4: //外勤
                $where = ['wuser_id' => $uid];
                break;
        }
        return $where;
    }

    /**
     * 菜单获取表格格式数据
     * 'id > :id AND name LIKE :name ', ['id' => 0, 'name' => 'thinkphp%']
     * @param $params array 分页和排序数据
     * @param $rule string 规则
     * @param $data array 数据
     * @return array|\PDOStatement|string|\think\Collection
     */
    public function getDgList($params, $rule, $fieids, $group_id)
    {

        $lists = $this->where('order', 1)
            ->view('data', '*')
            ->view('user', 'user_name', 'data.user_id=user.id', 'LEFT')
            ->order($params['sort'], $params['order'])
            ->page($params['page'], $params['rows'])
            ->where($rule, $fieids)
            ->where($this->groupWhere($group_id))
            //->fetchSql(true)
            ->select();

        $total = $this->where('order', 1)
            ->where($rule, $fieids)
            ->where($this->groupWhere($group_id))
            ->count();

        return array(
            'rows' => $lists, 'total' => $total
        );
    }

    /**
     * 搜索 Data 带分页
     * @param $params        分页排序参数          array ['page', 'rows', 'sort', 'order']
     * @param $array         数组条件
     * @param $group_id      用户组
     * @param bool $excel    是否为EXCEL下载格式
     * @param string $fieid  规定数据库字段
     * @return array         返回数组             [ row , total ]
     */
    public function search($params, $array, $group_id, $excel = false, $fieid = '*')
    {
        //表达式定义
        $exps = [
            "eq" => [],
            "like" => ['name', 'tel', 'rdate', 'Tag', 'shebaoname'],
            "in" => ['mode', 'speed', 'sbtype', 'service', 'status', 'user_id'],
            "between time" => ['add_time', 'I_date', 'II_date', 'speed_time']
        ];
        //日期字段,对应html type 的 value
        $datekeys = [0 => 'add_time', 1 => 'I_date', 2 => 'II_date', 3 => 'speed_time'];
        if (isset($array['date_type'])) {
            $type = $array['date_type'];// 等于数字
            $datepk = $datekeys[$type];
            $array[$datepk] = $array['date'];
            unset($array['date_type']);
            unset($array['date']);
        }
        //map条件组装.
        $map = array();
        while ($value = current($array)) {
            $key = key($array);
            $exp = $this->exp($exps, $key);
            if ($exp == null) $exp = "=";
            if ($exp == "like") $value = "%" . $value . "%";
            $map[] = ['data.' . $key, $exp, $value];
            next($array);
        }
        //Excel 是不能分页的
        if ($excel) {
            return $this->where('order', 1)
                ->order($params['sort'], $params['order'])
                ->view('data', $fieid)
                ->view('user', 'user_name', 'data.user_id=user.id', 'LEFT')
                //->fetchSql(true)
                ->where($this->groupWhere($group_id))
                ->where($map)
                ->select();
        } else {
            //返回带分页的

            $lists = $this->where('order', 1)
                ->order($params['sort'], $params['order'])
                ->page($params['page'], $params['rows'])
                ->view('data', '*')
                ->view('user', 'user_name', 'data.user_id=user.id', 'LEFT')
                //->fetchSql(true)
                ->where($this->groupWhere($group_id))
                ->where($map)
                ->select();

            $total = $this->where('order', 1)
                ->where($this->groupWhere($group_id))
                ->where($map)
                ->count();

            return array(
                'rows' => $lists, 'total' => $total
            );
        }
    }

    /**
     * 数据删除不是真的删除只是改了一下标记
     * @param $id
     * @return false|int
     */
    public function dataDel($id)
    {
        return $this->save(['order' => 0], ['id' => $id]);
    }

    /**
     * 就是返回数组格式为 不知道相同值会不会有问题
     * [
     *   "eq"      => ['name','tel'],
     *   "like"    => ['111'],
     *   "in"      => ['222'],
     *   "between" => ['333']
     * ]
     * @param $exps
     * @param $key
     * @return mixed
     */
    private function exp($exps, $key)
    {
        foreach ($exps as $expp) {
            $expskey = array_search($expp, $exps);//获取value 为 $expp 的 key
            foreach ($expp as $val) {
                if ($key == $val) {
                    return $expskey;
                }
            }
        }
    }

    /***********************************************************************************
     * **********************************修改器******************************************
     ***********************************************************************************/

    const NEW_CLIENT = -1;//新进客户
    const NOT_SHEBAO = 1;//没有社保
    const REFURN = 2;//问题打回
    const ETCINPUT = 3;//待录人保
    const COMMIT = 4;//提交人保
    const APPOINTMENT_I = 5;//预约1
    const APPOINTMENT_II = 6;//预约2
    const APPOINTMENT_SUCCESS = 7;//预约完成
    const SIGN = 8;//一审
    const PREPARE_SUBMIT = 9;//预备二审
    const SUBMIT = 10;//已二审
    const REVOCATION = 11;//撤销终止
    const REFUSE = 12;//不予受理
    const REGISTER = 13;//待报道
    const AUDIT = 14;//审批中
    const AUDIT_SUCCESS = 15;//审批同意
    const OUT_DIAOLING = 16;//出调令
    const GET_DIAOLING = 17;//拿调令
    const FINISH = 18;//完结

    /***********************************************************************************
     ************************************获取器******************************************
     ***********************************************************************************/
    public function getStatusAttr($key)
    {
        $data = [
            -1 => '新进客户', 1 => '没有社保', 2 => '问题打回', 3 => '待录人保',
            4 => '提交人保', 5 => '已约号I', 6 => '已约号II', 7 => '已出号',
            8 => '已一审', 9 => '预备二审', 10 => '已二审', 11 => '撤销终止',
            12 => '不予受理', 13 => '待报道', 14 => '审批中', 15 => '审批同意',
            16 => '出调令', 17 => '已拿调令', 18 => '完结', 100 => '派单外勤', 101 => '拿到身份证', 102 => '外处理'
        ];
        return isset($data[$key]) ? $data[$key] : '';
    }

    public function getServiceAttr($key)
    {
        $data = [
            -1 => '暂无', 101 => '外服(窗口)', 102 => '罗湖(窗口)', 103 => '龙华(窗口)', 104 => '龙岗(窗口)', 105 => '高新区(窗口)', 106 => '中心区(窗口)',

            201 => '龙华(区局)', 202 => '福田(区局)', 203 => '南山(区局)', 204 => ' 罗湖(区局) ', 205 => '光明(区局)', 206 => ' 盐田(区局)',

            300 => '单位(自己)', 301 => '单位(邦芒)', 302 => '单位(一牛)', 303 => ' 单位(永安)', 304 => '单位(神鹰)',
        ];
        return isset($data[$key]) ? $data[$key] : '暂无';
    }

    //  `marriage` tinyint(1) unsigned DEFAULT NULL COMMENT '01未婚 02已婚 03离异 04丧偶',
    public function getMarriageAttr($key)
    {
        $data = ['01' => '未婚', '02' => '已婚', '03' => '离异', '04' => '复婚', '05' => '再婚0', '06' => '丧偶'];
        if (isset($data[$key])) {
            return $data[$key];
        }
    }

    public function getAdderssAttr($key)
    {
        $data = [1 => '窗口集体户', 2 => '自己房产', 3 => '亲友房产', 4 => '单位集体户', 5 => '我们提供'];
        if (isset($data[$key])) {
            return $data[$key];
        }
    }

    //`education` tinyint(1) unsigned DEFAULT NULL COMMENT '学历:1博士.2硕士.3本科.4大专',
    public function getEducationAttr($key)
    {
        $data = ['01' => '博士', '02' => '硕士', '03' => '本科', '04' => '大专'];
        if (isset($data[$key])) {
            return $data[$key];
        }
    }

    //`order` tinyint(2) DEFAULT NULL COMMENT '订单 1 正常 -1 退款',
    public function getOrderAttr($key)
    {
        $data = [1 => '正常', -1 => '退款'];
        if (isset($data[$key])) {
            return $data[$key];
        }
    }

    //`mode` varchar(10) DEFAULT NULL COMMENT '模式:核准积分12.应届生3.留学生5',
    public function getModeAttr($key)
    {
        $data = ['03' => '应届生', '05' => '留学生', '11' => '积分制', '12' => '核准制'];
        if (isset($data[$key])) {
            return $data[$key];
        }
    }

    //  `sbtype` tinyint(1) unsigned DEFAULT '1' COMMENT '申报类型(1.个人2.单位)',
    public function getSbtypeAttr($key)
    {
        $data = [1 => '个人申报', 2 => '单位申报'];
        if (isset($data[$key])) {
            return $data[$key];
        }
    }

    //`zdtype` tinyint(1) DEFAULT '1' COMMENT '招调类型(1.招工2.调干)',
    public function getZdtypeAttr($key)
    {
        $data = ['01' => '招工', '02' => '调干'];
        if (isset($data[$key])) {
            return $data[$key];
        }
    }

    //`dangan` tinyint(2) DEFAULT '-1' COMMENT '调档 -1 | 1',
    public function getDanganAttr($key)
    {
        $data = [-1 => '否', 1 => '是'];
        if (isset($data[$key])) {
            return $data[$key];
        }
    }

    // `speed` tinyint(1) DEFAULT '0' COMMENT '进度 0 未办 1 一审 2 二审 3 完结',
    public function getSpeedAttr($key)
    {
        $data = [-1 => '未办', 1 => '签协议', 2 => '交材料', 3 => '调令'];
        if (isset($data[$key])) {
            return $data[$key];
        }
    }
}