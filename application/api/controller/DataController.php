<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2017/9/27
 * Time: 21:51
 */
namespace app\api\controller;
use app\api\model\Data;
use app\api\model\DataImg;
use app\common\controller\Base;
use app\common\org\Res;
use think\Response;

class DataController extends Base
{

    /**
     * 控制器初始化
     */
    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        $this->log();
    }

    /**
     * 创建data
     * @param Data $sqldata
     * @return \think\response\Json
     */
    public function create(Data $sqldata)
    {
        $data = $this->request->param();
        $data['user_id'] = $this->uid;
        $validate = new \app\api\validate\Data();
        if ($validate->check($data)) {
            if ($sqldata->save($data)) {
                return Res::Json(200);
            }
        } else {
            return Res::Json(400, $validate->getError());
        }
    }
    /**
     * 编辑
     * @param $id
     * @return \think\response\Json
     */
    public function edit($id)
    {
        $data = $this->request->post();
        $validate = new \app\api\validate\Data();
        if ($validate->scene('edit')->check($data)) {
            $m = Data::get($id);
            $m->bak(0);
            if ($m->save($data)) {
                return Res::Json(200);
            } else {
                return Res::Json(400);
            }
        } else {
            return Res::json(400, $validate->getError());
        }
    }
    public function getOneRow($id)
    {
        $row = Data::get($id);
        if ($row) {
            return json($row->getData());
        }
    }

    /**
     * 没有社保操作
     * @param $id
     * @return \think\response\Json
     */
    public function shebao($id)
    {
        $m = Data::get($id);
        $m->status = self::NOT_SHEBAO;
        if ($m->save()) {
            return Res::Json(200);
        } else {
            return Res::Json(400);
        }
    }

    /**
     * 退款操作
     * @param $id
     * @return \think\response\Json
     */
    public function refund($id)
    {
        $m = Data::get($id);
        $m->comment = $this->request->param('comment');
        $m->order = 0;
        if ($m->save()) {
            return Res::Json(200);
        } else {
            return Res::Json(400);
        }
    }

    /**
     * 问题打回
     * @param $id
     * @return \think\response\Json
     */
    public function refurn($id)
    {
        $m = Data::get($id);
        $m->comment = $this->request->param('comment');
        $m->Tag = $this->request->param('Tag');
        $m->status = Data::REFURN;
        if ($m->save()) {
            return Res::Json(200);
        } else {
            return Res::Json(400);
        }
    }

    /**
     * 待录人保
     * @param $id
     * @return \think\response\Json
     */
    public function etcinput($id)
    {
        $m = Data::get($id);
        $m->status = Data::ETCINPUT;
        return $m->save() ? Res::Json(200) : Res::Json(400);
    }

    /**
     * 提交人保
     * @param $id
     * @return \think\response\Json
     */
    public function commit($id)
    {
        $m = Data::get($id);
        $m->status = Data::COMMIT;
        $m->service = $this->request->param('service');
        $m->comment = $this->request->param('comment');
        return $m->save() ? Res::Json(200) : Res::Json(400);
    }

    /**
     * 一审
     * @param $id
     * @return \think\response\Json
     */
    public function sign($id)
    {
        $m = Data::get($id);
        $m->speed = 1;
        $m->status = Data::SIGN;
        if ($m->I_date == null) {
            $m->I_date = time();
        }
        return $m->save() ? Res::Json(200) : Res::Json(400);
    }

    /**
     * 预备二审
     * @param $id
     * @return \think\response\Json
     */
    public function prepareSubmit($id)
    {
        $m = Data::get($id);
        $m->status = Data::PREPARE_SUBMIT;
        return $m->save() ? Res::Json(200) : Res::Json(400);
    }

    /**
     * 已二审
     * @param $id
     * @return \think\response\Json
     */
    public function submit($id)
    {
        $m = Data::get($id);
        $m->speed = 2;
        $m->status = Data::SUBMIT;
        if ($m->II_date == null) {
            $m->II_date = time();
        }
        return $m->save() ? Res::Json(200) : Res::Json(400);
    }

    /**
     * 已拿调令
     * @param $id
     * @return \think\response\Json
     */
    public function takeDiaol($id)
    {
        $m = Data::get($id);
        $m->status = Data::GET_DIAOLING;
        return $m->save() ? Res::Json(200) : Res::Json(400);
    }

    /**
     * 完结
     * @param mixed|string $id
     * @return \think\response\Json
     */
    public function finish($id)
    {
        $m = Data::get($id);
        $m->speed = 3;
        $m->status = Data::FINISH;
        return $m->save() ? Res::Json(200) : Res::Json(400);
    }

    /**
     * 备注
     * @param $id
     * @return \think\response\Json
     */
    public function comment($id)
    {
        $m = Data::get($id);
        $m->comment = $this->request->param('comment');
        return $m->save() ? Res::Json(200) : Res::Json(400);
    }

    /**
     * 标记
     * @param $id
     * @return \think\response\Json
     */
    public function tag($id)
    {
        $m = Data::get($id);
        $m->Tag = $this->request->param('tag');
        $m->comment = $this->request->param('comment');
        return $m->save() ? Res::Json(200) : Res::Json(400);
    }

    /**
     * 获取数据列表支持搜索
     * //sort:rcdate  rows:15  page:1  order:desc
     * @param Data $sqldata
     * @return \think\response\Json
     */
    public function getDglist(Data $sqldata)
    {
        //请求说明 $params为排序分页 $rule 是查询规则 $fieids 是绑定参数
        $params = $this->request->only(['page', 'rows', 'sort', 'order'], 'post');
        $rule = $this->request->post('rule');
        $fieids = $this->request->except(['page', 'rows', 'sort', 'order', 'rule', 'type'], 'post');
        $type = $this->request->post('type');
        if ($type == 'sousou') {
            $lists = $sqldata->search($params, $fieids,$this->group_id);
        } else {
            if ($rule == null || $fieids == null) { // 没有条件显示所有
                $rule = "1 = :id";
                $fieids = ['id' => 1];
            }
            $lists = $sqldata->getDgList($params, $rule, $fieids,$this->group_id);
        }
        return json([
            'rows' => $lists,
            'total' => $sqldata->total(),
            'type' => $type
        ]);
    }

    /**
     * 内勤调入
     * @param $id
     * @return \think\response\Json
     */
    public function NuserCallin($id){
        $m = Data::get($id);
        if($m->nuser_id != null ){
            return Res::Json(400,
                '该用户已经是【 '
                .$m->nuser_id
                .' 】负责的客户若要调入请先联系该内勤调出'
            );
        }
        $m->nuser_id = $this->uid;
        return $m->save() ? Res::Json(200,'成功调入!') : Res::Json(400);
    }
    /**
     * SET已约号
     * @param $id
     * @return \think\response\Json
     */
    public function setAppointment($id)
    {
        $m = Data::get($id);
        if ($m->getData('speed') == 0 ) {
            $m->status = Data::APPOINTMENT_I;//已约号1
        } else if ( $m->getData('speed') == 1 ) {
            $m->status = Data::APPOINTMENT_II;//已约号2
        }
        return $m->save() ? Res::Json(200) : Res::Json(400);
    }
    /**
     * 获取已约号列表EXE调用
     * @param Data $m
     * @return \think\response\Json
     */
    public function getAppointmentList(Data $m){
        return json(
            $m->field('id,card,mode')
                ->where('status','in','5,6')
                ->where('order',1)
                ->select()
        );
    }

    /**
     * 获取已二审列表EXE调用用于查询人社进度
     * @param Data $m
     * @return \think\response\Json
     */
    public function getSubmitList(Data $m){
        return json(
            $m->field('id,card')
                ->where('order',1)
                ->where('status',10)//已二审
                ->select()
        );
    }
    /**
     * 获取人才网时间
     * @param $id
     * @param Data $m
     * @return mixed
     */
    public function getRcDate($id, Data $m)
    {
        return $m->where('id', $id)->value('rcdate');
    }

    /**
     * 设置人才网返回时间
     * @param $id
     * @param $time
     * @return \think\response\Json
     */
    public function setRcDate($id,$time)
    {
        $data = Data::get($id);
        $data->rcdate = $time;  //设置约号时间
        $data->status = Data::APPOINTMENT_SUCCESS; // 设置已出号
        return $data->save() ? Res::Json(200) : Res::Json(400);
    }
    public function getSzhrRegData(){

    }
    /**
     * 获取一行DATA数据
     * @param $id
     * @param Data $m
     * @return static
     */
    public function getOneData($id, Data $m)
    {
        return $m->get($id);
    }
}